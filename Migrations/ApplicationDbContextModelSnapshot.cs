// <auto-generated />
using System;
using KTRS.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KTRS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KTRS.Models.Block", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Block");
                });

            modelBuilder.Entity("KTRS.Models.Kat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BlockId")
                        .HasColumnType("integer");

                    b.Property<int>("KatNo")
                        .HasColumnType("integer");

                    b.Property<int>("MaxCol")
                        .HasColumnType("integer");

                    b.Property<int>("MaxRow")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BlockId");

                    b.ToTable("Katlar");
                });

            modelBuilder.Entity("KTRS.Models.Koltuk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ColumnIndex")
                        .HasColumnType("integer");

                    b.Property<bool>("Durum")
                        .HasColumnType("boolean");

                    b.Property<int>("KatId")
                        .HasColumnType("integer");

                    b.Property<string>("KoltukNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("RowIndex")
                        .HasColumnType("integer");

                    b.Property<int>("XCoord")
                        .HasColumnType("integer");

                    b.Property<int>("YCoord")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KatId");

                    b.ToTable("Koltuklar");
                });

            modelBuilder.Entity("KTRS.Models.Ogrenci", b =>
                {
                    b.Property<string>("ogrenciID")
                        .HasColumnType("text");

                    b.Property<bool>("QRokutmaDurumu")
                        .HasColumnType("boolean");

                    b.Property<int>("cikisSaat")
                        .HasColumnType("integer");

                    b.Property<bool>("girisDurumu")
                        .HasColumnType("boolean");

                    b.Property<string>("koltukNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("randevuBaslangicSaat")
                        .HasColumnType("integer");

                    b.Property<int>("randevuBitisSaat")
                        .HasColumnType("integer");

                    b.Property<string>("rezervasyonNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ogrenciID");

                    b.ToTable("Ogrenciler");
                });

            modelBuilder.Entity("KTRS.Models.Rezervasyon", b =>
                {
                    b.Property<string>("RezervasyonID")
                        .HasColumnType("text");

                    b.Property<bool>("Durum")
                        .HasColumnType("boolean");

                    b.Property<string>("KoltukNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ogrenciID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RezervasyonID");

                    b.ToTable("Rezervasyonlar");
                });

            modelBuilder.Entity("KTRS.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("confirmPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KTRS.Models.Yetkili", b =>
                {
                    b.Property<string>("YetkiliID")
                        .HasColumnType("text");

                    b.HasKey("YetkiliID");

                    b.ToTable("Yetkililer");
                });

            modelBuilder.Entity("KTRS.Models.Kat", b =>
                {
                    b.HasOne("KTRS.Models.Block", "Block")
                        .WithMany("Kats")
                        .HasForeignKey("BlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Block");
                });

            modelBuilder.Entity("KTRS.Models.Koltuk", b =>
                {
                    b.HasOne("KTRS.Models.Kat", "Kat")
                        .WithMany("Koltuklar")
                        .HasForeignKey("KatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kat");
                });

            modelBuilder.Entity("KTRS.Models.Block", b =>
                {
                    b.Navigation("Kats");
                });

            modelBuilder.Entity("KTRS.Models.Kat", b =>
                {
                    b.Navigation("Koltuklar");
                });
#pragma warning restore 612, 618
        }
    }
}
